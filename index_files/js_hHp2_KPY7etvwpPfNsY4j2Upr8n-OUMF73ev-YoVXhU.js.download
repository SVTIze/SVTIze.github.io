/**
 * @file
 * t_heftig.js
 *
 * Provides general enhancements and fixes to t_heftig's JS files.
 */

var Drupal = Drupal || {};

(function($, Drupal){
  "use strict";

  Drupal.behaviors.t_heftig = {
    attach: function(context) {
      // Provide some t_heftig tab/Drupal integration.
      $(context).find('.tabbable').once('t_heftig-tabs', function () {
        var $wrapper = $(this);
        var $tabs = $wrapper.find('.nav-tabs');
        var $content = $wrapper.find('.tab-content');
        var borderRadius = parseInt($content.css('borderBottomRightRadius'), 10);
        var t_heftigTabResize = function() {
          if ($wrapper.hasClass('tabs-left') || $wrapper.hasClass('tabs-right')) {
            $content.css('min-height', $tabs.outerHeight());
          }
        };
        // Add min-height on content for left and right tabs.
        t_heftigTabResize();
        // Detect tab switch.
        if ($wrapper.hasClass('tabs-left') || $wrapper.hasClass('tabs-right')) {
          $tabs.on('shown.bs.tab', 'a[data-toggle="tab"]', function (e) {
            t_heftigTabResize();
            if ($wrapper.hasClass('tabs-left')) {
              if ($(e.target).parent().is(':first-child')) {
                $content.css('borderTopLeftRadius', '0');
              }
              else {
                $content.css('borderTopLeftRadius', borderRadius + 'px');
              }
            }
            else {
              if ($(e.target).parent().is(':first-child')) {
                $content.css('borderTopRightRadius', '0');
              }
              else {
                $content.css('borderTopRightRadius', borderRadius + 'px');
              }
            }
          });
        }
      });
    }
  };

  /**
   * t_heftig Popovers.
   */
  Drupal.behaviors.t_heftigPopovers = {
    attach: function (context, settings) {
      if (settings.t_heftig && settings.t_heftig.popoverEnabled) {
        var elements = $(context).find('[data-toggle="popover"]').toArray();
        for (var i = 0; i < elements.length; i++) {
          var $element = $(elements[i]);
          var options = $.extend(true, {}, settings.t_heftig.popoverOptions, $element.data());
          $element.popover(options);
        }
      }
    }
  };

  /**
   * t_heftig Tooltips.
   */
  Drupal.behaviors.t_heftigTooltips = {
    attach: function (context, settings) {
      if (settings.t_heftig && settings.t_heftig.tooltipEnabled) {
        var elements = $(context).find('[data-toggle="tooltip"]').toArray();
        for (var i = 0; i < elements.length; i++) {
          var $element = $(elements[i]);
          var options = $.extend(true, {}, settings.t_heftig.tooltipOptions, $element.data());
          $element.tooltip(options);
        }
      }
    }
  };

  /**
   * Anchor fixes.
   */
  var $scrollableElement = $();
  Drupal.behaviors.t_heftigAnchors = {
    attach: function(context, settings) {
      var i, elements = ['html', 'body'];
      if (!$scrollableElement.length) {
        for (i = 0; i < elements.length; i++) {
          var $element = $(elements[i]);
          if ($element.scrollTop() > 0) {
            $scrollableElement = $element;
            break;
          }
          else {
            $element.scrollTop(1);
            if ($element.scrollTop() > 0) {
              $element.scrollTop(0);
              $scrollableElement = $element;
              break;
            }
          }
        }
      }
      if (!settings.t_heftig || !settings.t_heftig.anchorsFix) {
        return;
      }
      var anchors = $(context).find('a').toArray();
      for (i = 0; i < anchors.length; i++) {
        if (!anchors[i].scrollTo) {
          this.t_heftigAnchor(anchors[i]);
        }
      }
      $scrollableElement.once('t_heftig-anchors', function () {
        $scrollableElement.on('click.t_heftig-anchors', 'a[href*="#"]:not([data-toggle],[data-target])', function(e) {
          this.scrollTo(e);
        });
      });
    },
    t_heftigAnchor: function (element) {
      element.validAnchor = element.nodeName === 'A' && (location.hostname === element.hostname || !element.hostname) && element.hash.replace(/#/,'').length;
      element.scrollTo = function(event) {
        var attr = 'id';
        var $target = $(element.hash);
        if (!$target.length) {
          attr = 'name';
          $target = $('[name="' + element.hash.replace('#', '') + '"');
        }
        var offset = $target.offset().top - parseInt($scrollableElement.css('paddingTop'), 10) - parseInt($scrollableElement.css('marginTop'), 10);
        if (this.validAnchor && $target.length && offset > 0) {
          if (event) {
            event.preventDefault();
          }
          var $fakeAnchor = $('<div/>')
            .addClass('element-invisible')
            .attr(attr, $target.attr(attr))
            .css({
              position: 'absolute',
              top: offset + 'px',
              zIndex: -1000
            })
            .appendTo(document);
          $target.removeAttr(attr);
          var complete = function () {
            location.hash = element.hash;
            $fakeAnchor.remove();
            $target.attr(attr, element.hash.replace('#', ''));
          };
          if (Drupal.settings.t_heftig.anchorsSmoothScrolling) {
            $scrollableElement.animate({ scrollTop: offset, avoidTransforms: true }, 400, complete);
          }
          else {
            $scrollableElement.scrollTop(offset);
            complete();
          }
        }
      };
    }
  };

  /**
  * t_heftig Tooltips.
  */

  $("#nav-toggle").click(function(){
    $(".mainnavbar").slideToggle();
  });

  /**
   * Remove order from cart.
   */
  $("#edit-cart-fieldset").on('click', '.btnRemove', function () {
    $(this).prev('input').val(0);
  });

  /**
  * t_heftig navtoggle.
  */
  Drupal.behaviors.mobileNav = {
    attach: function(context, settings) {

      var menuexpanded = $(".mainnavbar-sub").find("li.expanded").add($(".mainnavbar").find("li.expanded"));
      menuexpanded.each(function(){
       var menuexpandeditem = $(this);
       menuexpandeditem.append( "<div></div>" );
       menuexpandeditem.find("div").parent().addClass("hascode");
       menuexpandeditem.children("div").click(function () {
         menuexpandeditem.toggleClass("opensub");
       });
       if (menuexpandeditem.hasClass("active-trail")) {
          $(this).addClass("opensub");
       }
      });
    }
  };

  /**
  * t_heftig alerts
  */

  $(".alerts").not(':has(.krumo-root)').click(function(){
    $(this).slideUp();
  });

  /**
  * slick .content-slideshow
  */

  $('.content-slideshow').slick({
    dots: false,
    infinite: true,
    speed: 300,
    slidesToShow: 1,
    centerMode: true,
    variableWidth: true
  });

  /**
   * Calculate header fullscreen height.
   */

    var group_header_content_margin = ($(window).height() - $("#toolbar").height() - $("#heftig-management-menu-top > div").height() - $("#nav-toggle-wrapper").height() - $("#block-system-main > .mainnavbar").height() - $(".advanced-header .group-header-content").height()-90)/2;
    if(group_header_content_margin > 130){
      $(".header-fullscreen-left .advanced-header .group-header-content, .header-fullscreen-center .advanced-header .group-header-content, .header-fullscreen-right .advanced-header .group-header-content").css("margin-top", group_header_content_margin+"px").css("margin-bottom", group_header_content_margin+"px ");
      //$(".header-image img").css("margin-top", group_header_content_margin+"px").css("margin-bottom", group_header_content_margin+"px ");
    }


  /**
  * Open urls in a new window/tab
  */

  $(document).on('click', 'a[rel$="external"]', function() {
    $(this).attr('target', "_blank");
  });

  $(document).on('click', 'a[href$=".pdf"]', function() {
    $(this).attr('target', "_blank");
  });

  $(document).on('click', 'a[href$=".zip"]', function() {
    $(this).attr('target', "_blank");
  });

  $(document).on('click', 'a[href$=".rar"]', function() {
    $(this).attr('target', "_blank");
  });

  // Open all http urls that don't belong to our domain in a new window or tab
  $(document).on('click', "a[href^='http:']:not([href*='" + window.location.host + "'])", function() {
    $(this).attr("target", "_blank");
  });

  // Open all https urls that don't belong to our domain in a new window or tab
  $(document).on('click', "a[href^='https:']:not([href*='" + window.location.host + "'])", function() {
    $(this).attr("target", "_blank");
  });


})(jQuery, Drupal);
;
